import {config} from 'dotenv';
import {src, dest} from 'gulp';
import {gulp as ClosureCompiler} from 'google-closure-compiler';

config();

const isDebug    = process.env.DEBUG  === 'true';
const isPrettify = process.env.PRETTY === 'true';
const sheetsID   = process.env.SPREADSHEETS_ID;

if (!sheetsID) {
    throw '.env SPREADSHEETS_ID= is undefined!';
};

export default function(cb){
    return src(
        ['./src/**/*.js', '!./src/dashboard/**/*.js'] // ソースの root の path
    ).pipe(
        ClosureCompiler(
            { // https://github.com/google/closure-compiler/wiki/JS-Modules
                env               : 'CUSTOM',
                module_resolution : 'BROWSER',
                entry_point       : 'backend/index.js', // ソースの root からのファイルパス
                define            : [
                    'goog.DEBUG=' + isDebug,
                    'goog.SPREAD_SHEETS_ID="' + sheetsID + '"'
                ],
                compilation_level : isDebug ? 'SIMPLE_OPTIMIZATIONS' : 'ADVANCED', /* 'WHITESPACE_ONLY' */
                // formatting        : isPrettify ? 'PRETTY_PRINT'         : 'SINGLE_QUOTES',
                warning_level     : 'VERBOSE',
                language_in       : 'ECMASCRIPT_2020',
                language_out      : 'ECMASCRIPT6',
                output_wrapper    : '/* THIS SCRIPT IS GENERATED BY "gulp". DO NOT EDIT! */;\n' +
                                    ( isDebug
                                        ? '%output%'
                                        : '(function(Date,Number,Math,Array,String,JSON,SpreadsheetApp,ContentService,LockService){\n%output%\n})(Date,Number,Math,Array,String,JSON,SpreadsheetApp,ContentService,LockService);'
                                    ) +
                                    'function doGet(e){return __do_get__(e)};' +
                                    'function doPost(e){return __do_post__(e)};' +
                                    'function doSchedule(e){__do_schedule__(e)};' +
                                    'function admin(action,param){return __admin__(action,param)};'
            }
        )
    ).pipe(
        ClosureCompiler(
            {
                compilation_level : isDebug ? 'WHITESPACE_ONLY' : 'SIMPLE_OPTIMIZATIONS',
                formatting        : isPrettify ? 'PRETTY_PRINT' : 'SINGLE_QUOTES',
                warning_level     : 'QUIET',
                js_output_file    : 'backend.js'
            }
        )
    ).pipe(
        dest('./')
    )
};
